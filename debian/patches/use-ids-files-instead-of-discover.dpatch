#! /bin/sh /usr/share/dpatch/dpatch-run
## use-ids-files-instead-of-discover.dpatch by  <paulo@c3sl.ufpr.br>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: mdm normally uses the "discover" devices to find video card drivers and
## DP: BUS IDs. With this patch, we use the files in
## DP: /usr/share/xserver-xorg/pci/ and lspci. These files are provided by the
## DP: video drivers, and may be more accurate than 'discover'.

@DPATCH@
diff -urNad mdm-0.0.3~/mdm/src/discover-devices mdm-0.0.3/mdm/src/discover-devices
--- mdm-0.0.3~/mdm/src/discover-devices	2008-10-15 10:42:55.000000000 -0200
+++ mdm-0.0.3/mdm/src/discover-devices	2008-10-29 16:17:07.000000000 -0200
@@ -25,8 +25,6 @@
 
 # TODO: find a decent way to do all this.
 
-DISCOVER=/sbin/discover
-
 # This function prints the physical addresses of the mice found
 function discover_input () {
 
@@ -48,29 +46,16 @@
 # Prints bus address and drivers of the video cards.
 function video_cards () {
 
-    # calling discover is way toooooo slow!
-    OUTPUT=$($DISCOVER -t display --vendor-id --model-id)
-    VENDOR_IDS=($(echo "$OUTPUT" | cut -d' ' -f1))
-    MODEL_IDS=($( echo "$OUTPUT" | cut -d' ' -f2))
-    # There can be empty lines on "drivers"
-    DRIVERS=($($DISCOVER -t display --data-path=xfree86/server/device/driver \
-	       | sed 's/^$/vesa/g'))
-
-    for (( i = 0; i < ${#VENDOR_IDS[@]}; i++)); do
-        # If there are multiple cards with the same IDs, lspci will print
-	# multiple lines
+    IDS_BY_DRIVER=/usr/share/xserver-xorg/pci
 
-	# See how many times we already used these IDs:
-	TIMES_USED=0
-	for (( j=0; j < i; j++)); do
-	    if ( [ "${VENDOR_IDS[j]}" = "${VENDOR_IDS[i]}" ] &&
-	         [ "${MODEL_IDS[j]}"  = "${MODEL_IDS[i]}"  ] ); then
-		 TIMES_USED=$((TIMES_USED+1))
-	    fi
-	done
+    # 'discover' prints in the reverse order of lspci, I think
+    BUS_IDS=($(lspci | grep VGA | cut -d' ' -f1 | tac))
 
-	BUS_IDS[i]=$(lspci -d ${VENDOR_IDS[i]}:${MODEL_IDS[i]} | 
-		     cut -d' ' -f1 | head -n $((TIMES_USED+1)) | tail -n 1)
+    for (( i=0; i < ${#BUS_IDS[@]}; i++ )); do
+        PCI_DEVICE=$(lspci -n -s ${BUS_IDS[i]} | cut -d' ' -f3)
+        # We might find multiple drivers. Use the first.
+        DRIVERS[i]=$(grep -i ${PCI_DEVICE/:/} $IDS_BY_DRIVER/* | \
+                     cut -d'/' -f6 | cut -d'.' -f1 | head -n 1)
     done
 
     for (( i=0 ; i < ${#BUS_IDS[@]}; i++ )) ; do
